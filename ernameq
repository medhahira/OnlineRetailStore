[1mdiff --git a/cli.py b/cli.py[m
[1mindex 669cf9a..26895be 100644[m
[1m--- a/cli.py[m
[1m+++ b/cli.py[m
[36m@@ -8,11 +8,33 @@[m [mfrom os import system[m
 now = datetime.now()[m
 dt= now.strftime("%Y-%m-%d %H:%M:%S")[m
 [m
[31m-cnx = mysql.connector.connect(user='root', password='*', [m
[32m+[m[32mcnx = mysql.connector.connect(user='root', password='Pam@2302',[m[41m [m
                               host='localhost', database='online retail store')[m
 [m
 cursor = cnx.cursor()[m
 [m
[32m+[m[32mdef bill_customer(order_id, bill_amount, val):[m
[32m+[m[32m    try:[m
[32m+[m[32m        # start a transaction[m
[32m+[m[32m        cnx.autocommit = False[m
[32m+[m
[32m+[m[32m        # create a new billing entry for the order[m
[32m+[m[32m        query_insert = """insert into Billing (billingID, payment_mode, bill_amount, amount_donated, ngoID, couponID, orderID) values (%s, %s, %s, %s, %s, %s, %s)"""[m
[32m+[m[32m        cursor.execute(query_insert,val)[m
[32m+[m[41m        [m
[32m+[m[32m        # add the remaining amount to the customer's account[m
[32m+[m[32m        cursor.execute("UPDATE customer SET balance = balance - %s WHERE username = (SELECT distinct username FROM `order` WHERE orderID = %s)", (bill_amount, order_id))[m
[32m+[m
[32m+[m[32m        # commit the transaction[m
[32m+[m[32m        cnx.commit()[m
[32m+[m[32m    except Exception as e:[m
[32m+[m[32m        print(e)[m
[32m+[m[32m        # rollback the transaction if there is an error[m
[32m+[m[32m        cnx.rollback()[m
[32m+[m[32m        print("Error billing customer.")[m
[32m+[m[32m    # finally:[m
[32m+[m[32m        # cursor.close()[m
[32m+[m
 #ADDING IN CART, LETTING USER INC QUANTITY- USE A TRIGGER, OR A CHECK FOR QUANTITY [m
 #DELIVERY PARTNER login and signup, details fetch[m
 #DISTRIBUTOR login and signup [m
[36m@@ -426,10 +448,9 @@[m [mORDER BY Category, Year DESC, Month DESC;"""[m
 [m
                 method_to_pay = input("Method to pay (COD/UPI/card/wallet) : ")[m
                 ##TRANSACTION[m
[31m-                query_insert = """insert into Billing (billingID, payment_mode, bill_amount, amount_donated, ngoID, couponID, orderID) values (%s, %s, %s, %s, %s, %s, %s)"""[m
                 val = (111, method_to_pay, round(float(bill_amount),2), amount_donated, ngo_id, coupon_id, 12)[m
[31m-                cursor.execute(query_insert,val)[m
[31m-                cnx.commit ()[m
[32m+[m[32m                bill_customer(12,round(float(bill_amount),2),val)[m
[32m+[m
             elif (input_user == 4):[m
                 query_bal = f"Select username, balance from Customer where username = '{str(username)}' \n"[m
                 cursor.execute(query_bal)[m
